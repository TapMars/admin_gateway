// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/productManager.proto

package proto

import (
	dayofweek "google.golang.org/genproto/googleapis/type/dayofweek"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	timeofday "google.golang.org/genproto/googleapis/type/timeofday"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterDistance int32

const (
	FilterDistance_None   FilterDistance = 0
	FilterDistance_One    FilterDistance = 1
	FilterDistance_Five   FilterDistance = 2
	FilterDistance_Twenty FilterDistance = 3
)

// Enum value maps for FilterDistance.
var (
	FilterDistance_name = map[int32]string{
		0: "None",
		1: "One",
		2: "Five",
		3: "Twenty",
	}
	FilterDistance_value = map[string]int32{
		"None":   0,
		"One":    1,
		"Five":   2,
		"Twenty": 3,
	}
)

func (x FilterDistance) Enum() *FilterDistance {
	p := new(FilterDistance)
	*p = x
	return p
}

func (x FilterDistance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterDistance) Descriptor() protoreflect.EnumDescriptor {
	return file_api_productManager_proto_enumTypes[0].Descriptor()
}

func (FilterDistance) Type() protoreflect.EnumType {
	return &file_api_productManager_proto_enumTypes[0]
}

func (x FilterDistance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterDistance.Descriptor instead.
func (FilterDistance) EnumDescriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{0}
}

type Sort int32

const (
	Sort_NameRelevance Sort = 0
	Sort_Favorites     Sort = 1
	Sort_Updated       Sort = 2
	Sort_Created       Sort = 3
)

// Enum value maps for Sort.
var (
	Sort_name = map[int32]string{
		0: "NameRelevance",
		1: "Favorites",
		2: "Updated",
		3: "Created",
	}
	Sort_value = map[string]int32{
		"NameRelevance": 0,
		"Favorites":     1,
		"Updated":       2,
		"Created":       3,
	}
)

func (x Sort) Enum() *Sort {
	p := new(Sort)
	*p = x
	return p
}

func (x Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_api_productManager_proto_enumTypes[1].Descriptor()
}

func (Sort) Type() protoreflect.EnumType {
	return &file_api_productManager_proto_enumTypes[1]
}

func (x Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sort.Descriptor instead.
func (Sort) EnumDescriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{1}
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{0}
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{1}
}

func (x *Id) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ItemsAffected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ItemsAffected) Reset() {
	*x = ItemsAffected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemsAffected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemsAffected) ProtoMessage() {}

func (x *ItemsAffected) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemsAffected.ProtoReflect.Descriptor instead.
func (*ItemsAffected) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{2}
}

func (x *ItemsAffected) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BusinessItemsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string              `protobuf:"bytes,1,opt,name=businessId,proto3" json:"businessId,omitempty"`
	DayOfWeek  dayofweek.DayOfWeek `protobuf:"varint,2,opt,name=dayOfWeek,proto3,enum=google.type.DayOfWeek" json:"dayOfWeek,omitempty"`
}

func (x *BusinessItemsQuery) Reset() {
	*x = BusinessItemsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessItemsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessItemsQuery) ProtoMessage() {}

func (x *BusinessItemsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessItemsQuery.ProtoReflect.Descriptor instead.
func (*BusinessItemsQuery) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{3}
}

func (x *BusinessItemsQuery) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *BusinessItemsQuery) GetDayOfWeek() dayofweek.DayOfWeek {
	if x != nil {
		return x.DayOfWeek
	}
	return dayofweek.DayOfWeek(0)
}

type BusinessesQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LatLng         *latlng.LatLng `protobuf:"bytes,2,opt,name=latLng,proto3" json:"latLng,omitempty"`
	FilterDistance FilterDistance `protobuf:"varint,3,opt,name=filterDistance,proto3,enum=productManager.FilterDistance" json:"filterDistance,omitempty"`
	Sort           Sort           `protobuf:"varint,4,opt,name=sort,proto3,enum=productManager.Sort" json:"sort,omitempty"`
}

func (x *BusinessesQuery) Reset() {
	*x = BusinessesQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessesQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessesQuery) ProtoMessage() {}

func (x *BusinessesQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessesQuery.ProtoReflect.Descriptor instead.
func (*BusinessesQuery) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{4}
}

func (x *BusinessesQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BusinessesQuery) GetLatLng() *latlng.LatLng {
	if x != nil {
		return x.LatLng
	}
	return nil
}

func (x *BusinessesQuery) GetFilterDistance() FilterDistance {
	if x != nil {
		return x.FilterDistance
	}
	return FilterDistance_None
}

func (x *BusinessesQuery) GetSort() Sort {
	if x != nil {
		return x.Sort
	}
	return Sort_NameRelevance
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Favorites         int32                  `protobuf:"varint,3,opt,name=favorites,proto3" json:"favorites,omitempty"`
	HappyHourPeriod   *HappyHourPeriod       `protobuf:"bytes,4,opt,name=happyHourPeriod,proto3" json:"happyHourPeriod,omitempty"`
	Details           *ItemDetails           `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	BusinessReference *BusinessReference     `protobuf:"bytes,6,opt,name=businessReference,proto3" json:"businessReference,omitempty"`
	Created           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	Updated           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated,proto3" json:"updated,omitempty"`
	LatLng            *latlng.LatLng         `protobuf:"bytes,9,opt,name=latLng,proto3" json:"latLng,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{5}
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetFavorites() int32 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

func (x *Item) GetHappyHourPeriod() *HappyHourPeriod {
	if x != nil {
		return x.HappyHourPeriod
	}
	return nil
}

func (x *Item) GetDetails() *ItemDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Item) GetBusinessReference() *BusinessReference {
	if x != nil {
		return x.BusinessReference
	}
	return nil
}

func (x *Item) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Item) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Item) GetLatLng() *latlng.LatLng {
	if x != nil {
		return x.LatLng
	}
	return nil
}

type ItemProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId      string           `protobuf:"bytes,1,opt,name=businessId,proto3" json:"businessId,omitempty"`
	Name            string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	HappyHourPeriod *HappyHourPeriod `protobuf:"bytes,3,opt,name=happyHourPeriod,proto3" json:"happyHourPeriod,omitempty"`
	Details         *ItemDetails     `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ItemProfile) Reset() {
	*x = ItemProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemProfile) ProtoMessage() {}

func (x *ItemProfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemProfile.ProtoReflect.Descriptor instead.
func (*ItemProfile) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{6}
}

func (x *ItemProfile) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *ItemProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemProfile) GetHappyHourPeriod() *HappyHourPeriod {
	if x != nil {
		return x.HappyHourPeriod
	}
	return nil
}

func (x *ItemProfile) GetDetails() *ItemDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type BusinessReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId   string `protobuf:"bytes,1,opt,name=businessId,proto3" json:"businessId,omitempty"`
	BusinessName string `protobuf:"bytes,2,opt,name=businessName,proto3" json:"businessName,omitempty"`
}

func (x *BusinessReference) Reset() {
	*x = BusinessReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessReference) ProtoMessage() {}

func (x *BusinessReference) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessReference.ProtoReflect.Descriptor instead.
func (*BusinessReference) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{7}
}

func (x *BusinessReference) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *BusinessReference) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

type HappyHourPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HoursText string               `protobuf:"bytes,1,opt,name=hours_text,json=hoursText,proto3" json:"hours_text,omitempty"`
	DayOfWeek dayofweek.DayOfWeek  `protobuf:"varint,2,opt,name=dayOfWeek,proto3,enum=google.type.DayOfWeek" json:"dayOfWeek,omitempty"`
	Start     *timeofday.TimeOfDay `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End       *timeofday.TimeOfDay `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	Bleeds    bool                 `protobuf:"varint,5,opt,name=bleeds,proto3" json:"bleeds,omitempty"`
}

func (x *HappyHourPeriod) Reset() {
	*x = HappyHourPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HappyHourPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HappyHourPeriod) ProtoMessage() {}

func (x *HappyHourPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HappyHourPeriod.ProtoReflect.Descriptor instead.
func (*HappyHourPeriod) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{8}
}

func (x *HappyHourPeriod) GetHoursText() string {
	if x != nil {
		return x.HoursText
	}
	return ""
}

func (x *HappyHourPeriod) GetDayOfWeek() dayofweek.DayOfWeek {
	if x != nil {
		return x.DayOfWeek
	}
	return dayofweek.DayOfWeek(0)
}

func (x *HappyHourPeriod) GetStart() *timeofday.TimeOfDay {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *HappyHourPeriod) GetEnd() *timeofday.TimeOfDay {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *HappyHourPeriod) GetBleeds() bool {
	if x != nil {
		return x.Bleeds
	}
	return false
}

type ItemDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IsDrink     bool   `protobuf:"varint,3,opt,name=isDrink,proto3" json:"isDrink,omitempty"`
	IsFood      bool   `protobuf:"varint,4,opt,name=isFood,proto3" json:"isFood,omitempty"`
	IsOther     bool   `protobuf:"varint,5,opt,name=isOther,proto3" json:"isOther,omitempty"`
}

func (x *ItemDetails) Reset() {
	*x = ItemDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDetails) ProtoMessage() {}

func (x *ItemDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDetails.ProtoReflect.Descriptor instead.
func (*ItemDetails) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{9}
}

func (x *ItemDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ItemDetails) GetIsDrink() bool {
	if x != nil {
		return x.IsDrink
	}
	return false
}

func (x *ItemDetails) GetIsFood() bool {
	if x != nil {
		return x.IsFood
	}
	return false
}

func (x *ItemDetails) GetIsOther() bool {
	if x != nil {
		return x.IsOther
	}
	return false
}

type Business struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Favorites int32                  `protobuf:"varint,3,opt,name=favorites,proto3" json:"favorites,omitempty"`
	Address   *Address               `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Created   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Updated   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	LatLng    *latlng.LatLng         `protobuf:"bytes,7,opt,name=latLng,proto3" json:"latLng,omitempty"`
}

func (x *Business) Reset() {
	*x = Business{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Business) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Business) ProtoMessage() {}

func (x *Business) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Business.ProtoReflect.Descriptor instead.
func (*Business) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{10}
}

func (x *Business) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Business) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Business) GetFavorites() int32 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

func (x *Business) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Business) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Business) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Business) GetLatLng() *latlng.LatLng {
	if x != nil {
		return x.LatLng
	}
	return nil
}

type BusinessProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address *Address       `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	LatLng  *latlng.LatLng `protobuf:"bytes,4,opt,name=latLng,proto3" json:"latLng,omitempty"`
}

func (x *BusinessProfile) Reset() {
	*x = BusinessProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessProfile) ProtoMessage() {}

func (x *BusinessProfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessProfile.ProtoReflect.Descriptor instead.
func (*BusinessProfile) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{11}
}

func (x *BusinessProfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BusinessProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BusinessProfile) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *BusinessProfile) GetLatLng() *latlng.LatLng {
	if x != nil {
		return x.LatLng
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionCode string   `protobuf:"bytes,1,opt,name=region_code,json=regionCode,proto3" json:"region_code,omitempty"` //US for now
	Lines      []string `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	City       string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State      string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Zip        string   `protobuf:"bytes,5,opt,name=zip,proto3" json:"zip,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{12}
}

func (x *Address) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *Address) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

type OpeningHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenNow   bool                  `protobuf:"varint,1,opt,name=open_now,json=openNow,proto3" json:"open_now,omitempty"`
	Monday    []*OpeningHoursPeriod `protobuf:"bytes,2,rep,name=monday,proto3" json:"monday,omitempty"`
	Tuesday   []*OpeningHoursPeriod `protobuf:"bytes,3,rep,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday []*OpeningHoursPeriod `protobuf:"bytes,4,rep,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday  []*OpeningHoursPeriod `protobuf:"bytes,5,rep,name=thursday,proto3" json:"thursday,omitempty"`
	Friday    []*OpeningHoursPeriod `protobuf:"bytes,6,rep,name=friday,proto3" json:"friday,omitempty"`
	Saturday  []*OpeningHoursPeriod `protobuf:"bytes,7,rep,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday    []*OpeningHoursPeriod `protobuf:"bytes,8,rep,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *OpeningHours) Reset() {
	*x = OpeningHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningHours) ProtoMessage() {}

func (x *OpeningHours) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningHours.ProtoReflect.Descriptor instead.
func (*OpeningHours) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{13}
}

func (x *OpeningHours) GetOpenNow() bool {
	if x != nil {
		return x.OpenNow
	}
	return false
}

func (x *OpeningHours) GetMonday() []*OpeningHoursPeriod {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *OpeningHours) GetTuesday() []*OpeningHoursPeriod {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *OpeningHours) GetWednesday() []*OpeningHoursPeriod {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *OpeningHours) GetThursday() []*OpeningHoursPeriod {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *OpeningHours) GetFriday() []*OpeningHoursPeriod {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *OpeningHours) GetSaturday() []*OpeningHoursPeriod {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *OpeningHours) GetSunday() []*OpeningHoursPeriod {
	if x != nil {
		return x.Sunday
	}
	return nil
}

type OpeningHoursPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HoursText string               `protobuf:"bytes,1,opt,name=hours_text,json=hoursText,proto3" json:"hours_text,omitempty"`
	Open      *timeofday.TimeOfDay `protobuf:"bytes,2,opt,name=open,proto3" json:"open,omitempty"`
	Close     *timeofday.TimeOfDay `protobuf:"bytes,3,opt,name=close,proto3" json:"close,omitempty"`
}

func (x *OpeningHoursPeriod) Reset() {
	*x = OpeningHoursPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_productManager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningHoursPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningHoursPeriod) ProtoMessage() {}

func (x *OpeningHoursPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_api_productManager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningHoursPeriod.ProtoReflect.Descriptor instead.
func (*OpeningHoursPeriod) Descriptor() ([]byte, []int) {
	return file_api_productManager_proto_rawDescGZIP(), []int{14}
}

func (x *OpeningHoursPeriod) GetHoursText() string {
	if x != nil {
		return x.HoursText
	}
	return ""
}

func (x *OpeningHoursPeriod) GetOpen() *timeofday.TimeOfDay {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *OpeningHoursPeriod) GetClose() *timeofday.TimeOfDay {
	if x != nil {
		return x.Close
	}
	return nil
}

var File_api_productManager_proto protoreflect.FileDescriptor

var file_api_productManager_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x79, 0x6f, 0x66, 0x77, 0x65,
	0x65, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6c, 0x61, 0x74, 0x6c, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x66, 0x64, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x41,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6a, 0x0a,
	0x12, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x09,
	0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x12, 0x46,
	0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0xb4, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0f, 0x68,
	0x61, 0x70, 0x70, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x70, 0x70, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0f, 0x68, 0x61, 0x70, 0x70, 0x79, 0x48, 0x6f, 0x75, 0x72,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4f, 0x0a,
	0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x11, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61,
	0x74, 0x4c, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52,
	0x06, 0x6c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x68,
	0x61, 0x70, 0x70, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x70, 0x70, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0f, 0x68, 0x61, 0x70, 0x70, 0x79, 0x48, 0x6f, 0x75, 0x72,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x57, 0x0a,
	0x11, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x0f, 0x48, 0x61, 0x70, 0x70, 0x79,
	0x48, 0x6f, 0x75, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f,
	0x75, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x68, 0x6f, 0x75, 0x72, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x61, 0x79,
	0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66,
	0x57, 0x65, 0x65, 0x6b, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12,
	0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x28, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44,
	0x61, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x65, 0x65, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x6c, 0x65, 0x65, 0x64, 0x73, 0x22,
	0x7b, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x46, 0x6f, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x6f,
	0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x98, 0x02, 0x0a,
	0x08, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61,
	0x74, 0x4c, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52,
	0x06, 0x6c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x31, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x22,
	0x7c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a,
	0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x22, 0xdd, 0x03,
	0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x4e, 0x6f, 0x77, 0x12, 0x3a, 0x0a, 0x06, 0x6d, 0x6f, 0x6e,
	0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x06, 0x6d,
	0x6f, 0x6e, 0x64, 0x61, 0x79, 0x12, 0x3c, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x07, 0x74, 0x75, 0x65, 0x73,
	0x64, 0x61, 0x79, 0x12, 0x40, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e,
	0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61,
	0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x08, 0x74, 0x68, 0x75,
	0x72, 0x73, 0x64, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61,
	0x79, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61,
	0x79, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x22, 0x8d, 0x01,
	0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12,
	0x2c, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x2a, 0x39, 0x0a,
	0x0e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x6e, 0x65,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x76, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x54, 0x77, 0x65, 0x6e, 0x74, 0x79, 0x10, 0x03, 0x2a, 0x42, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x03, 0x32, 0x94, 0x05, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x35, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x12, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3d,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49,
	0x64, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x64,
	0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22,
	0x00, 0x30, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_productManager_proto_rawDescOnce sync.Once
	file_api_productManager_proto_rawDescData = file_api_productManager_proto_rawDesc
)

func file_api_productManager_proto_rawDescGZIP() []byte {
	file_api_productManager_proto_rawDescOnce.Do(func() {
		file_api_productManager_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_productManager_proto_rawDescData)
	})
	return file_api_productManager_proto_rawDescData
}

var file_api_productManager_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_productManager_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_productManager_proto_goTypes = []interface{}{
	(FilterDistance)(0),           // 0: productManager.FilterDistance
	(Sort)(0),                     // 1: productManager.Sort
	(*EmptyResponse)(nil),         // 2: productManager.EmptyResponse
	(*Id)(nil),                    // 3: productManager.Id
	(*ItemsAffected)(nil),         // 4: productManager.ItemsAffected
	(*BusinessItemsQuery)(nil),    // 5: productManager.BusinessItemsQuery
	(*BusinessesQuery)(nil),       // 6: productManager.BusinessesQuery
	(*Item)(nil),                  // 7: productManager.Item
	(*ItemProfile)(nil),           // 8: productManager.ItemProfile
	(*BusinessReference)(nil),     // 9: productManager.BusinessReference
	(*HappyHourPeriod)(nil),       // 10: productManager.HappyHourPeriod
	(*ItemDetails)(nil),           // 11: productManager.ItemDetails
	(*Business)(nil),              // 12: productManager.Business
	(*BusinessProfile)(nil),       // 13: productManager.BusinessProfile
	(*Address)(nil),               // 14: productManager.Address
	(*OpeningHours)(nil),          // 15: productManager.OpeningHours
	(*OpeningHoursPeriod)(nil),    // 16: productManager.OpeningHoursPeriod
	(dayofweek.DayOfWeek)(0),      // 17: google.type.DayOfWeek
	(*latlng.LatLng)(nil),         // 18: google.type.LatLng
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
	(*timeofday.TimeOfDay)(nil),   // 20: google.type.TimeOfDay
}
var file_api_productManager_proto_depIdxs = []int32{
	17, // 0: productManager.BusinessItemsQuery.dayOfWeek:type_name -> google.type.DayOfWeek
	18, // 1: productManager.BusinessesQuery.latLng:type_name -> google.type.LatLng
	0,  // 2: productManager.BusinessesQuery.filterDistance:type_name -> productManager.FilterDistance
	1,  // 3: productManager.BusinessesQuery.sort:type_name -> productManager.Sort
	10, // 4: productManager.Item.happyHourPeriod:type_name -> productManager.HappyHourPeriod
	11, // 5: productManager.Item.details:type_name -> productManager.ItemDetails
	9,  // 6: productManager.Item.businessReference:type_name -> productManager.BusinessReference
	19, // 7: productManager.Item.created:type_name -> google.protobuf.Timestamp
	19, // 8: productManager.Item.updated:type_name -> google.protobuf.Timestamp
	18, // 9: productManager.Item.latLng:type_name -> google.type.LatLng
	10, // 10: productManager.ItemProfile.happyHourPeriod:type_name -> productManager.HappyHourPeriod
	11, // 11: productManager.ItemProfile.details:type_name -> productManager.ItemDetails
	17, // 12: productManager.HappyHourPeriod.dayOfWeek:type_name -> google.type.DayOfWeek
	20, // 13: productManager.HappyHourPeriod.start:type_name -> google.type.TimeOfDay
	20, // 14: productManager.HappyHourPeriod.end:type_name -> google.type.TimeOfDay
	14, // 15: productManager.Business.address:type_name -> productManager.Address
	19, // 16: productManager.Business.created:type_name -> google.protobuf.Timestamp
	19, // 17: productManager.Business.updated:type_name -> google.protobuf.Timestamp
	18, // 18: productManager.Business.latLng:type_name -> google.type.LatLng
	14, // 19: productManager.BusinessProfile.address:type_name -> productManager.Address
	18, // 20: productManager.BusinessProfile.latLng:type_name -> google.type.LatLng
	16, // 21: productManager.OpeningHours.monday:type_name -> productManager.OpeningHoursPeriod
	16, // 22: productManager.OpeningHours.tuesday:type_name -> productManager.OpeningHoursPeriod
	16, // 23: productManager.OpeningHours.wednesday:type_name -> productManager.OpeningHoursPeriod
	16, // 24: productManager.OpeningHours.thursday:type_name -> productManager.OpeningHoursPeriod
	16, // 25: productManager.OpeningHours.friday:type_name -> productManager.OpeningHoursPeriod
	16, // 26: productManager.OpeningHours.saturday:type_name -> productManager.OpeningHoursPeriod
	16, // 27: productManager.OpeningHours.sunday:type_name -> productManager.OpeningHoursPeriod
	20, // 28: productManager.OpeningHoursPeriod.open:type_name -> google.type.TimeOfDay
	20, // 29: productManager.OpeningHoursPeriod.close:type_name -> google.type.TimeOfDay
	3,  // 30: productManager.ProductManager.GetItem:input_type -> productManager.Id
	8,  // 31: productManager.ProductManager.CreateItem:input_type -> productManager.ItemProfile
	3,  // 32: productManager.ProductManager.DeleteItem:input_type -> productManager.Id
	5,  // 33: productManager.ProductManager.QueryBusinessItems:input_type -> productManager.BusinessItemsQuery
	3,  // 34: productManager.ProductManager.GetBusiness:input_type -> productManager.Id
	13, // 35: productManager.ProductManager.CreateBusiness:input_type -> productManager.BusinessProfile
	13, // 36: productManager.ProductManager.UpdateBusiness:input_type -> productManager.BusinessProfile
	3,  // 37: productManager.ProductManager.DeleteBusiness:input_type -> productManager.Id
	6,  // 38: productManager.ProductManager.QueryBusinesses:input_type -> productManager.BusinessesQuery
	7,  // 39: productManager.ProductManager.GetItem:output_type -> productManager.Item
	3,  // 40: productManager.ProductManager.CreateItem:output_type -> productManager.Id
	2,  // 41: productManager.ProductManager.DeleteItem:output_type -> productManager.EmptyResponse
	7,  // 42: productManager.ProductManager.QueryBusinessItems:output_type -> productManager.Item
	12, // 43: productManager.ProductManager.GetBusiness:output_type -> productManager.Business
	3,  // 44: productManager.ProductManager.CreateBusiness:output_type -> productManager.Id
	4,  // 45: productManager.ProductManager.UpdateBusiness:output_type -> productManager.ItemsAffected
	4,  // 46: productManager.ProductManager.DeleteBusiness:output_type -> productManager.ItemsAffected
	12, // 47: productManager.ProductManager.QueryBusinesses:output_type -> productManager.Business
	39, // [39:48] is the sub-list for method output_type
	30, // [30:39] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_productManager_proto_init() }
func file_api_productManager_proto_init() {
	if File_api_productManager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_productManager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemsAffected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessItemsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessesQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HappyHourPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Business); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_productManager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningHoursPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_productManager_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_productManager_proto_goTypes,
		DependencyIndexes: file_api_productManager_proto_depIdxs,
		EnumInfos:         file_api_productManager_proto_enumTypes,
		MessageInfos:      file_api_productManager_proto_msgTypes,
	}.Build()
	File_api_productManager_proto = out.File
	file_api_productManager_proto_rawDesc = nil
	file_api_productManager_proto_goTypes = nil
	file_api_productManager_proto_depIdxs = nil
}
