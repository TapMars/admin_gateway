# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# [START cloudbuild_go_yaml]
# [START cloudbuild_go_test_yaml]
steps:
  # Run tests and save to file
  - name: golang
    entrypoint: /bin/bash
    args:
      - -c
      - |
        go get -u github.com/jstemmer/go-junit-report
        2>&1 go test -timeout 1m -v ./... | tee sponge.log
        /go/bin/go-junit-report -set-exit-code < sponge.log > ${SHORT_SHA}_test_log.xml
  # [END cloudbuild_go_test_yaml]

  # [START cloudbuild_go_image_yaml]
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build',
           '-f', 'docker/server/Dockerfile',
           '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_APP:$SHORT_SHA', '.']
  # [END cloudbuild_go_image_yaml]

  # [START cloudbuild_go_push_yaml]
  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_APP:$SHORT_SHA']
  # [END cloudbuild_go_push_yaml]

  # [START cloudbuild_dev_config_yaml]
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [ 'config','set','project','$_DEV_PROJECT' ]
  # [END cloudbuild_dev_config_yaml]

  # [START cloudbuild_dev_deploy_yaml]
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', '$_APP',
           '--image=us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_APP:$SHORT_SHA',
           '--region', 'us-central1', '--platform', 'managed',
           '--port', '$_PORT',
           '--service-account', '$_DEV_SERVICE_ACCOUNT',
           '--timeout', '60',
           '--use-http2',
           '--set-env-vars', 'PROJECT_ID=$_DEV_PROJECT',
           '--set-env-vars', 'GRPC_GO_LOG_SEVERITY_LEVEL=info',
           '--set-env-vars', 'GRPC_GO_LOG_VERBOSITY_LEVEL=2']
  # [END cloudbuild_dev_deploy_yaml]

  # [START cloudbuild_prod_config_yaml]
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [ 'config','set','project','$_PROD_PROJECT' ]
  # [END cloudbuild_prod_config_yaml]

  # [START cloudbuild_prod_deploy_yaml]
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', '$_APP',
           '--image=us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_APP:$SHORT_SHA',
           '--region', 'us-central1', '--platform', 'managed',
           '--port', '$_PORT',
           '--service-account', '$_PROD_SERVICE_ACCOUNT',
           '--timeout', '60',
           '--use-http2',
           '--set-env-vars', 'PROJECT_ID=$_PROD_PROJECT',
           '--set-env-vars', 'GRPC_GO_LOG_SEVERITY_LEVEL=info',
           '--set-env-vars', 'GRPC_GO_LOG_VERBOSITY_LEVEL=2']
    # [END cloudbuild_prod_deploy_yaml]